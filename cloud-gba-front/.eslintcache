[{"/home/gripsou/Documents/projects/tmp/lauz/cloud-gba/src/reportWebVitals.ts":"1","/home/gripsou/Documents/projects/tmp/lauz/cloud-gba/src/index.tsx":"2","/home/gripsou/Documents/projects/tmp/lauz/cloud-gba/src/App.tsx":"3","/home/gripsou/Documents/projects/tmp/lauz/cloud-gba/src/components/Screen.tsx":"4","/home/gripsou/Documents/projects/tmp/lauz/cloud-gba/src/components/Button.tsx":"5","/home/gripsou/Documents/projects/tmp/lauz/cloud-gba/src/components/CrossPad.tsx":"6","/home/gripsou/Documents/projects/tmp/lauz/cloud-gba/src/components/ActionButtons.tsx":"7","/home/gripsou/Documents/projects/tmp/lauz/cloud-gba/src/routes/Full.tsx":"8","/home/gripsou/Documents/projects/tmp/lauz/cloud-gba/src/routes/Screen.tsx":"9"},{"size":425,"mtime":1606505061335,"results":"10","hashOfConfig":"11"},{"size":500,"mtime":1606505061330,"results":"12","hashOfConfig":"11"},{"size":882,"mtime":1606550691287,"results":"13","hashOfConfig":"11"},{"size":1610,"mtime":1606548470941,"results":"14","hashOfConfig":"11"},{"size":528,"mtime":1606509625642,"results":"15","hashOfConfig":"11"},{"size":1911,"mtime":1606549509447,"results":"16","hashOfConfig":"11"},{"size":1572,"mtime":1606549476115,"results":"17","hashOfConfig":"11"},{"size":720,"mtime":1606550678334,"results":"18","hashOfConfig":"11"},{"size":452,"mtime":1606550481896,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zl0anj",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gripsou/Documents/projects/tmp/lauz/cloud-gba/src/reportWebVitals.ts",[],"/home/gripsou/Documents/projects/tmp/lauz/cloud-gba/src/index.tsx",[],["39","40"],"/home/gripsou/Documents/projects/tmp/lauz/cloud-gba/src/App.tsx",["41"],"/home/gripsou/Documents/projects/tmp/lauz/cloud-gba/src/components/Screen.tsx",["42"],"/home/gripsou/Documents/projects/tmp/lauz/cloud-gba/src/components/Button.tsx",[],"/home/gripsou/Documents/projects/tmp/lauz/cloud-gba/src/components/CrossPad.tsx",[],"/home/gripsou/Documents/projects/tmp/lauz/cloud-gba/src/components/ActionButtons.tsx",[],"/home/gripsou/Documents/projects/tmp/lauz/cloud-gba/src/routes/Full.tsx",[],"/home/gripsou/Documents/projects/tmp/lauz/cloud-gba/src/routes/Screen.tsx",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":3,"column":50,"nodeType":"49","messageId":"50","endLine":3,"endColumn":54},{"ruleId":"51","severity":1,"message":"52","line":11,"column":9,"nodeType":"53","endLine":24,"endColumn":4,"suggestions":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","The 'draw' function makes the dependencies of useEffect Hook (at line 28) change on every render. To fix this, wrap the definition of 'draw' in its own useCallback() Hook.","VariableDeclarator",["57"],"no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Wrap the definition of 'draw' in its own useCallback() Hook.",{"range":"60","text":"61"},[264,599],"useCallback(async () => {\n    if (canvas.current === null) return;\n\n    const ctx = canvas.current.getContext(\"2d\");\n    if (ctx === null) return;\n    if (Math.random() > 0.5) {\n      ctx.fillStyle = \"#6b6b8c\";\n    } else {\n      ctx.fillStyle = \"#c8cad5\";\n    }\n\n    ctx.fillRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);\n    setTimeout(draw, 200);\n  })"]