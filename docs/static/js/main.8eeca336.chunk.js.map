{"version":3,"sources":["components/Screen.tsx","lib/input.ts","components/ActionButtons.tsx","components/CrossPad.tsx","routes/Full.tsx","routes/Screen.tsx","components/Connection.tsx","lib/state.ts","components/ChoicePanel.tsx","routes/Choice.tsx","routes/Gamepad.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SCREEN_WIDTH","SCREEN_HEIGHT","SCREEN_BORDER","Screen","Key","props","canvas","useRef","container","useState","zoom","setZoom","useEffect","ws","onmessage","e","current","data","Blob","type","img","document","createElement","url","window","URL","webkitURL","createObjectURL","ctx","getContext","imageSmoothingEnabled","onload","drawImage","src","fillStyle","fillRect","w","offsetWidth","h","offsetHeight","console","log","Container","ref","fullScreen","ScreenBorders","Canvas","width","height","styled","div","ActionButtonsPanel","ButtonKind","handler","event","up","send","touchHandler","preventDefault","Button","kind","a","onUp","A","onDown","onTouchDown","onTouchUp","b","B","BUTTON_DIAMETER","BUTTON_MARGIN","ButtonContainer","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","PAD_BRANCH_WIDTH","PAD_BRANCH_LENGTH","CrossPad","mouseHandler","VerticalBranch","isTop","down","HorizontalBranch","isLeft","left","right","CenterNode","Pad","Branch","Full","screenWs","ControlContainer","inputWs","ActionButtons","Connection","State","text","setText","openWebSocket","ip","socket","WebSocket","binaryType","onopen","onerror","onclose","Input","value","onChange","target","onClick","onConnection","handleConnection","input","ChoicePanel","onChoice","state","choose","Item","selected","choice","full","onSelect","screen","ItemContainer","Led","ItemTextContainer","Choice","setChoice","c","Gamepad","HorizontalContainer","App","setState","setScreenWs","setInputWs","component","sws","iws","nextState","className","Body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8eeca336.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst SCREEN_WIDTH = 240;\nconst SCREEN_HEIGHT = 160;\nconst SCREEN_BORDER = 32;\n\ninterface IScreen {\n  ws: WebSocket | null;\n  fullScreen: boolean;\n}\n\nfunction Screen(props: IScreen) {\n  const canvas = useRef<null | HTMLCanvasElement>(null);\n  const container = useRef<null | HTMLDivElement>(null);\n  const [zoom, setZoom] = useState(1);\n\n  useEffect(() => {\n    if (props.ws) {\n      props.ws.onmessage = (e) => {\n        if (canvas && canvas.current) {\n          const data = new Blob([e.data], { type: \"image/jpeg\" });\n          const img = document.createElement(\"img\");\n          const urlCreator = window.URL || window.webkitURL;\n          const url = urlCreator.createObjectURL(data);\n          const ctx = canvas.current.getContext(\"2d\");\n          if (ctx) {\n            ctx.imageSmoothingEnabled = false;\n            img.onload = () => {\n              ctx?.drawImage(\n                img,\n                0,\n                0,\n                SCREEN_WIDTH * zoom,\n                SCREEN_HEIGHT * zoom\n              );\n            };\n            img.src = url;\n          }\n        }\n      };\n    } else if (canvas.current) {\n      const ctx = canvas.current.getContext(\"2d\");\n      if (ctx) {\n        ctx.fillStyle = \"#c8cad5\";\n        ctx.fillRect(0, 0, SCREEN_WIDTH * zoom, SCREEN_HEIGHT * zoom);\n      }\n    }\n  }, [canvas, zoom, props.ws]);\n\n  useEffect(() => {\n    if (container && container.current) {\n      const w = container.current.offsetWidth;\n      const h = container.current.offsetHeight;\n      console.log(h, w);\n      if (\n        w >= 4 * SCREEN_WIDTH + SCREEN_BORDER &&\n        h >= 4 * SCREEN_HEIGHT + SCREEN_BORDER\n      ) {\n        setZoom(4);\n      } else if (\n        w >= 2 * SCREEN_WIDTH + SCREEN_BORDER &&\n        h >= 2 * SCREEN_HEIGHT + SCREEN_BORDER\n      ) {\n        setZoom(2);\n      }\n    }\n  }, [container]);\n\n  return (\n    <Container ref={container} fullScreen={props.fullScreen}>\n      <ScreenBorders zoom={zoom}>\n        <Canvas\n          width={SCREEN_WIDTH * zoom}\n          height={SCREEN_HEIGHT * zoom}\n          ref={canvas}\n        />\n      </ScreenBorders>\n    </Container>\n  );\n}\n\nexport default Screen;\n\nconst Container = styled.div<{ fullScreen: boolean }>`\n  ${(props) =>\n    props.fullScreen\n      ? `width: 100vw;\n        height: 100vh;\n        display: flex;\n        justify-content: center;\n        align-items: center;`\n      : \"\"}\n`;\n\nconst ScreenBorders = styled.div<{ zoom: number }>`\n  max-width: ${(props) => props.zoom * SCREEN_WIDTH + SCREEN_BORDER}px;\n  min-width: ${(props) => props.zoom * SCREEN_WIDTH + SCREEN_BORDER}px;\n  max-height: ${(props) => props.zoom * SCREEN_HEIGHT + SCREEN_BORDER}px;\n  min-height: ${(props) => props.zoom * SCREEN_HEIGHT + SCREEN_BORDER}px;\n  background-color: #1c1c24;\n  border-radius: 10px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Canvas = styled.canvas`\n  image-rendering: optimizeSpeed;\n  image-rendering: -moz-crisp-edges;\n  image-rendering: -webkit-optimize-contrast;\n  image-rendering: optimize-contrast;\n  -ms-interpolation-mode: nearest-neighbor;\n`;\n","export enum Key {\n    A = 0,\n    B = 1,\n    select = 2,\n    start = 3,\n    right = 4,\n    left = 5,\n    up = 6,\n    down = 7,\n    R = 8,\n    L = 9,\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Key } from \"../lib/input\";\n\nexport default ActionButtonsPanel;\n\nconst BUTTON_DIAMETER = 40;\nconst BUTTON_MARGIN = 24;\nconst PANEL_WIDTH = 2 * BUTTON_MARGIN + 2 * BUTTON_DIAMETER;\nconst PANEL_HEIGHT = 2 * BUTTON_MARGIN + 2 * BUTTON_DIAMETER;\n\nenum ButtonKind {\n  a = \"A\",\n  b = \"B\",\n}\n\ninterface IActionButtons {\n  ws: WebSocket | null;\n}\n\nfunction ActionButtonsPanel(props: IActionButtons) {\n  const handler = (event: Key, up: boolean) => () => {\n    if (props.ws) {\n      if (up) {\n        props.ws.send(`0${event}`);\n      } else {\n        props.ws.send(`1${event}`);\n      }\n    } else {\n      console.log(\"Connection closed: can't send event\");\n    }\n  };\n\n  const touchHandler = (event: Key, up: boolean) => (e: React.TouchEvent) => {\n    e.preventDefault();\n    if (props.ws) {\n      if (up) {\n        props.ws.send(`0${event}`);\n      } else {\n        props.ws.send(`1${event}`);\n      }\n    } else {\n      console.log(\"Connection closed: can't send event\");\n    }\n  };\n\n  return (\n    <Container>\n      <Button\n        kind={ButtonKind.a}\n        onUp={handler(Key.A, true)}\n        onDown={handler(Key.A, false)}\n        onTouchDown={touchHandler(Key.A, true)}\n        onTouchUp={touchHandler(Key.A, false)}\n      />\n      <Button\n        kind={ButtonKind.b}\n        onUp={handler(Key.B, true)}\n        onDown={handler(Key.B, false)}\n        onTouchDown={touchHandler(Key.B, true)}\n        onTouchUp={touchHandler(Key.B, false)}\n      />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  height: ${PANEL_HEIGHT}px;\n  width: ${PANEL_WIDTH}px;\n  position: relative;\n`;\n\ninterface IButtonProps {\n  kind: ButtonKind;\n  onUp: () => void;\n  onDown: () => void;\n  onTouchUp: (e: React.TouchEvent) => void;\n  onTouchDown: (e: React.TouchEvent) => void;\n}\n\nfunction Button(props: IButtonProps) {\n  return (\n    <ButtonContainer\n      kind={props.kind}\n      onMouseDown={props.onDown}\n      onMouseUp={props.onUp}\n      onTouchStart={props.onTouchDown}\n      onTouchEnd={props.onTouchUp}\n    >\n      <span>{props.kind}</span>\n    </ButtonContainer>\n  );\n}\n\nconst ButtonContainer = styled.div<{ kind: ButtonKind }>`\n  background-color: #c8cad5;\n  height: ${BUTTON_DIAMETER}px;\n  width: ${BUTTON_DIAMETER}px;\n  border-radius: ${BUTTON_DIAMETER}px;\n  border: 0;\n  display: flex;\n  justify-content: center;\n  position: absolute;\n  top: ${(props) =>\n    props.kind === ButtonKind.a\n      ? `${BUTTON_MARGIN}px`\n      : `${BUTTON_MARGIN + BUTTON_DIAMETER}px`};\n  left: ${(props) =>\n    props.kind === ButtonKind.a\n      ? `${BUTTON_MARGIN + BUTTON_DIAMETER}px`\n      : `${BUTTON_MARGIN}px`};\n\n  span {\n    margin: auto;\n  }\n\n  :active {\n    filter: brightness(85%);\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Key } from \"../lib/input\";\n\nconst PAD_BRANCH_WIDTH = 32;\nconst PAD_BRANCH_LENGTH = 48;\nconst PAD_RADIUS = 8;\n\ninterface ICrossPad {\n  ws: WebSocket | null;\n}\n\nfunction CrossPad(props: ICrossPad) {\n  const mouseHandler = (event: Key, up: boolean) => () => {\n    if (props.ws) {\n      if (up) {\n        props.ws.send(`0${event}`);\n      } else {\n        props.ws.send(`1${event}`);\n      }\n    } else {\n      console.log(\"Connection closed: can't send event\");\n    }\n  };\n\n  const touchHandler = (event: Key, up: boolean) => (e: React.TouchEvent) => {\n    e.preventDefault();\n    if (props.ws) {\n      if (up) {\n        props.ws.send(`0${event}`);\n      } else {\n        props.ws.send(`1${event}`);\n      }\n    } else {\n      console.log(\"Connection closed: can't send event\");\n    }\n  };\n\n  return (\n    <Container>\n      <VerticalBranch\n        isTop={true}\n        onMouseUp={mouseHandler(Key.up, true)}\n        onMouseDown={mouseHandler(Key.up, false)}\n        onTouchStart={touchHandler(Key.up, false)}\n        onTouchEnd={touchHandler(Key.up, true)}\n      />\n      <VerticalBranch\n        isTop={false}\n        onMouseUp={mouseHandler(Key.down, true)}\n        onMouseDown={mouseHandler(Key.down, false)}\n        onTouchStart={touchHandler(Key.down, false)}\n        onTouchEnd={touchHandler(Key.down, true)}\n      />\n      <HorizontalBranch\n        isLeft={true}\n        onMouseUp={mouseHandler(Key.left, true)}\n        onMouseDown={mouseHandler(Key.left, false)}\n        onTouchStart={touchHandler(Key.left, false)}\n        onTouchEnd={touchHandler(Key.left, true)}\n      />\n      <HorizontalBranch\n        isLeft={false}\n        onMouseUp={mouseHandler(Key.right, true)}\n        onMouseDown={mouseHandler(Key.right, false)}\n        onTouchStart={touchHandler(Key.right, false)}\n        onTouchEnd={touchHandler(Key.right, true)}\n      />\n      <CenterNode />\n    </Container>\n  );\n}\n\nexport default CrossPad;\n\nconst Container = styled.div`\n  height: ${2 * PAD_BRANCH_LENGTH + PAD_BRANCH_WIDTH}px;\n  width: ${2 * PAD_BRANCH_LENGTH + PAD_BRANCH_WIDTH}px;\n  position: relative;\n`;\n\nconst Pad = styled.div`\n  background-color: #c8cad5;\n`;\n\nconst CenterNode = styled(Pad)`\n  height: ${PAD_BRANCH_WIDTH}px;\n  width: ${PAD_BRANCH_WIDTH}px;\n  position: absolute;\n  top: ${PAD_BRANCH_LENGTH}px;\n  left: ${PAD_BRANCH_LENGTH}px;\n`;\n\nconst Branch = styled(Pad)`\n  :active {\n    filter: brightness(85%);\n  }\n`;\n\nconst VerticalBranch = styled(Branch)<{ isTop: boolean }>`\n  height: ${PAD_BRANCH_LENGTH}px;\n  width: ${PAD_BRANCH_WIDTH}px;\n  position: absolute;\n  ${(props) =>\n    props.isTop\n      ? `\n      top: O;\n      border-radius: ${PAD_RADIUS}px ${PAD_RADIUS}px 0 0;\n      `\n      : `\n      bottom: 0;\n      border-radius: 0 0 ${PAD_RADIUS}px ${PAD_RADIUS}px;\n      `}\n  left: ${PAD_BRANCH_LENGTH}px;\n`;\n\nconst HorizontalBranch = styled(Branch)<{ isLeft: boolean }>`\n  height: ${PAD_BRANCH_WIDTH}px;\n  width: ${PAD_BRANCH_LENGTH}px;\n  position: absolute;\n  ${(props) =>\n    props.isLeft\n      ? `\n        left: O;\n        border-radius:  ${PAD_RADIUS}px 0 0 ${PAD_RADIUS}px;\n        `\n      : `\n      right: 0;\n      border-radius: 0 ${PAD_RADIUS}px ${PAD_RADIUS}px 0;\n      `}\n  top: ${PAD_BRANCH_LENGTH}px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Screen from \"../components/Screen\";\nimport ActionButtonsPanel from \"../components/ActionButtons\";\nimport CrossPad from \"../components/CrossPad\";\n\ninterface IFull {\n  screenWs: null | WebSocket;\n  inputWs: null | WebSocket;\n}\n\nfunction Full(props: IFull) {\n  return (\n    <Container>\n      <Screen ws={props.screenWs} fullScreen={false} />\n      <ControlContainer>\n        <CrossPad ws={props.inputWs} />\n        <ActionButtonsPanel ws={props.inputWs} />\n      </ControlContainer>\n    </Container>\n  );\n}\n\nexport default Full;\n\nconst Container = styled.div`\n  min-height: 100vh;\n  max-height: 100vh;\n  min-width: 100vw;\n  max-width: 100vw;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ControlContainer = styled.div`\n  margin-top: 20px;\n  display: flex;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport ScreenComponent from \"../components/Screen\";\n\ninterface IScreen {\n  ws: null | WebSocket;\n}\n\nfunction Screen(props: IScreen) {\n  return (\n    <Container>\n      <ScreenComponent ws={props.ws} fullScreen={true} />\n    </Container>\n  );\n}\n\nexport default Screen;\n\nconst Container = styled.div`\n  min-height: 100vh;\n  max-height: 100vh;\n  min-width: 100vw;\n  max-width: 100vw;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\ninterface IConnection {\n  onConnection: (screenWs: WebSocket | null, inputWs: WebSocket | null) => void;\n  type: \"screen\" | \"input\" | \"both\";\n}\n\nfunction Connection(props: IConnection) {\n  const [text, setText] = useState(\"206.189.62.12:8100\");\n\n  const openWebSocket = (ip: string, type: \"screen\" | \"input\") => {\n    const socket = new WebSocket(`ws://${ip}`);\n    socket.binaryType = \"arraybuffer\";\n    socket.onopen = () => {\n      console.log(\"Conn open\");\n      socket.send(type);\n    };\n    socket.onerror = (e) => {\n      console.log(e);\n    };\n    socket.onclose = () => {\n      console.log(\"Conn closed\");\n    };\n    return socket;\n  };\n\n  const handleConnection = (ip: string) => {\n    let screenWs = null;\n    let inputWs = null;\n    if (props.type === \"screen\" || props.type === \"both\") {\n      screenWs = openWebSocket(ip, \"screen\");\n    }\n    if (props.type === \"input\" || props.type === \"both\") {\n      inputWs = openWebSocket(ip, \"input\");\n    }\n    props.onConnection(screenWs, inputWs);\n  };\n\n  return (\n    <Container>\n      <Input\n        type=\"text\"\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n      />\n      <button onClick={() => handleConnection(text)}>Connect</button>\n    </Container>\n  );\n}\n\nexport default Connection;\n\nconst Container = styled.div`\n  margin: 32px;\n`;\n\nconst Input = styled.input`\n  margin: 8px;\n`;\n","export enum State {\n    choice,\n    full,\n    screen,\n    input,\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { State } from \"../lib/state\";\n\ninterface IChoice {\n  choose: (state: State) => void;\n  choice: State;\n}\n\nfunction ChoicePanel(props: IChoice) {\n  const onChoice = (state: State) => () => {\n    props.choose(state);\n  };\n\n  return (\n    <Container>\n      <Item\n        text=\"Screen + gamepad\"\n        selected={props.choice === State.full}\n        onSelect={onChoice(State.full)}\n      />\n      <Item\n        text=\"Screen only\"\n        selected={props.choice === State.screen}\n        onSelect={onChoice(State.screen)}\n      />\n      <Item\n        text=\"Gamepad only\"\n        selected={props.choice === State.input}\n        onSelect={onChoice(State.input)}\n      />\n    </Container>\n  );\n}\n\nexport default ChoicePanel;\n\ninterface IItem {\n  text: string;\n  selected: boolean;\n  onSelect: () => void;\n}\n\nfunction Item(props: IItem) {\n  return (\n    <ItemContainer>\n      <Led selected={props.selected} />\n      <ItemTextContainer onClick={props.onSelect}>\n        {props.text}\n      </ItemTextContainer>\n    </ItemContainer>\n  );\n}\n\nconst Container = styled.div``;\n\nconst ItemContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst Led = styled.div<{ selected: boolean }>`\n  width: 8px;\n  height: 8px;\n  border-radius: 8px;\n  background-color: ${(props) => (props.selected ? \"#32b532\" : \"#d0d3db\")};\n  margin: auto;\n  ${(props) => (props.selected ? \"box-shadow: 0 0 16px #32b532;\" : \"\")}\n`;\n\nconst ItemTextContainer = styled.div`\n  text-align: center;\n  width: 160px;\n  background-color: #423c6c;\n  margin: 1rem;\n  padding: 0.5rem 2rem;\n  border-radius: 16px;\n  color: #bbbdcb;\n  cursor: pointer;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Connection from \"../components/Connection\";\nimport ChoicePanel from \"../components/ChoicePanel\";\nimport { State } from \"../lib/state\";\n\ninterface IChoice {\n  choose: (\n    screenWs: WebSocket | null,\n    inputWs: WebSocket | null,\n    state: State\n  ) => void;\n}\n\nfunction Choice(props: IChoice) {\n  const [choice, setChoice] = useState(State.full);\n  return (\n    <Container>\n      <Connection\n        onConnection={(screenWs, inputWs) =>\n          props.choose(screenWs, inputWs, choice)\n        }\n        type=\"both\"\n      />\n      <ChoicePanel choose={(c) => setChoice(c)} choice={choice} />\n    </Container>\n  );\n}\n\nexport default Choice;\n\nconst Container = styled.div`\n  min-height: 100vh;\n  max-height: 100vh;\n  min-width: 100vw;\n  max-width: 100vw;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ControlContainer = styled.div`\n  margin-top: 20px;\n  display: flex;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport ActionButtonsPanel from \"../components/ActionButtons\";\nimport CrossPad from \"../components/CrossPad\";\n\ninterface IGamepad {\n  ws: null | WebSocket;\n}\n\nfunction Gamepad(props: IGamepad) {\n  return (\n    <Container>\n      <HorizontalContainer>\n        <CrossPad ws={props.ws} />\n        <ActionButtonsPanel ws={props.ws} />\n      </HorizontalContainer>\n    </Container>\n  );\n}\n\nexport default Gamepad;\n\nconst Container = styled.div`\n  min-height: 100vh;\n  max-height: 100vh;\n  min-width: 100vw;\n  max-width: 100vw;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst HorizontalContainer = styled.div`\n  width: 100vw;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-around;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Full from \"./routes/Full\";\nimport Screen from \"./routes/Screen\";\nimport Choice from \"./routes/Choice\";\nimport Gamepad from \"./routes/Gamepad\";\nimport { State } from \"./lib/state\";\n\nfunction App() {\n  const [state, setState] = useState(State.choice);\n  const [screenWs, setScreenWs] = useState<null | WebSocket>(null);\n  const [inputWs, setInputWs] = useState<null | WebSocket>(null);\n\n  const choose = (\n    sws: null | WebSocket,\n    iws: null | WebSocket,\n    nextState: State\n  ) => {\n    setScreenWs(sws);\n    setInputWs(iws);\n    setState(nextState);\n  };\n\n  let component = null;\n  switch (state) {\n    case State.choice:\n      component = <Choice choose={choose} />;\n      break;\n    case State.screen:\n      component = <Screen ws={screenWs} />;\n      break;\n    case State.full:\n      component = <Full inputWs={inputWs} screenWs={screenWs} />;\n      break;\n    case State.input:\n      component = <Gamepad ws={inputWs} />;\n      break;\n  }\n  return (\n    <div className=\"App\">\n      <Body>{component}</Body>\n    </div>\n  );\n}\n\nexport default App;\n\nconst Body = styled.div`\n  min-height: 100vh;\n  max-height: 100vh;\n  min-width: 100vw;\n  max-width: 100vw;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  background-color: #675ea7;\n`;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}